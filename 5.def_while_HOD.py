# Функция для подсчета количества цифр в числе (процедурный подход)
k = 0  # глобальная переменная


def Countgit_1(n):
    ''' Процедура для подсчета количества цифр в числе '''
    global k
    while n > 0:
        n = n // 10
        k = k + 1


# Функция для подсчета количества цифр в числе (функциональный подход)
def Countgit_2(n):
    ''' Функция для подсчета количества цифр в числе '''
    k = 0
    while n > 0:
        n = n // 10
        k = k + 1
    return k


# Функция для нахождения НОД по алгоритму Евклида
def euclidean_algorithm(a, b):
    ''' Функция для нахождения НОД по алгоритму Евклида '''
    while a != b:
        if a > b:
            a = a - b
        else:
            b = b - a
    return a


# Основная программа
if __name__ == "__main__":
    # Пример использования Countgit_1 (процедурный подход)
    test_num_1 = 1234568
    Countgit_1(test_num_1)
    print("Количество цифр в числе (процедурный подход):", k)

    # Пример использования Countgit_2 (функциональный подход)
    test_num_2 = 1234568
    h = Countgit_2(test_num_2)
    print("Количество цифр в числе (функциональный подход):", h)

    # Пример использования алгоритма Евклида
    a = int(input('Задайте первое число: '))
    b = int(input('Задайте второе число: '))
    nod = euclidean_algorithm(a, b)
    print('НОД равен', nod)